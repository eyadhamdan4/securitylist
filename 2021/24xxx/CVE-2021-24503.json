{
    "MITRE": {
        "CVE_data_meta": {
            "ASSIGNER": "contact@wpscan.com",
            "ID": "CVE-2021-24503",
            "STATE": "PUBLIC",
            "TITLE": "Popular Brand SVG Icons - Simple Icons < 2.7.8 - Contributor+ Stored XSS"
        },
        "affects": {
            "vendor": {
                "vendor_data": [
                    {
                        "product": {
                            "product_data": [
                                {
                                    "product_name": "Popular Brand Icons \u2013 Simple Icons",
                                    "version": {
                                        "version_data": [
                                            {
                                                "version_affected": "<",
                                                "version_name": "2.7.8",
                                                "version_value": "2.7.8"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "vendor_name": "Unknown"
                    }
                ]
            }
        },
        "credit": [
            {
                "lang": "eng",
                "value": "apple502j"
            }
        ],
        "data_format": "MITRE",
        "data_type": "CVE",
        "data_version": "4.0",
        "description": {
            "description_data": [
                {
                    "lang": "eng",
                    "value": "The Popular Brand Icons \u2013 Simple Icons WordPress plugin before 2.7.8 does not sanitise or validate some of its shortcode parameters, such as \"color\", \"size\" or \"class\", allowing users with a role as low as Contributor to set Cross-Site payload in them. A post made by a contributor would still have to be approved by an admin to have the XSS triggered in the frontend, however, higher privilege users, such as editor could exploit this without the need of approval, and even when the blog disallows the unfiltered_html capability."
                }
            ]
        },
        "generator": "WPScan CVE Generator",
        "problemtype": {
            "problemtype_data": [
                {
                    "description": [
                        {
                            "lang": "eng",
                            "value": "CWE-79 Cross-site Scripting (XSS)"
                        }
                    ]
                }
            ]
        },
        "references": {
            "reference_data": [
                {
                    "name": "https://wpscan.com/vulnerability/18ab1570-2b4a-48a4-86e6-c1d368563691",
                    "refsource": "MISC",
                    "url": "https://wpscan.com/vulnerability/18ab1570-2b4a-48a4-86e6-c1d368563691"
                }
            ]
        },
        "source": {
            "discovery": "UNKNOWN"
        }
    },
    "NVD": {
        "configurations": {
            "CVE_data_version": "4.0",
            "nodes": []
        },
        "cve": {
            "CVE_data_meta": {
                "ASSIGNER": "contact@wpscan.com",
                "ID": "CVE-2021-24503"
            },
            "data_format": "MITRE",
            "data_type": "CVE",
            "data_version": "4.0",
            "description": {
                "description_data": [
                    {
                        "lang": "en",
                        "value": "The Popular Brand Icons \u00e2\u20ac\u201c Simple Icons WordPress plugin before 2.7.8 does not sanitise or validate some of its shortcode parameters, such as \"color\", \"size\" or \"class\", allowing users with a role as low as Contributor to set Cross-Site payload in them. A post made by a contributor would still have to be approved by an admin to have the XSS triggered in the frontend, however, higher privilege users, such as editor could exploit this without the need of approval, and even when the blog disallows the unfiltered_html capability."
                    }
                ]
            },
            "problemtype": {
                "problemtype_data": [
                    {
                        "description": []
                    }
                ]
            },
            "references": {
                "reference_data": [
                    {
                        "name": "https://wpscan.com/vulnerability/18ab1570-2b4a-48a4-86e6-c1d368563691",
                        "refsource": "MISC",
                        "tags": [],
                        "url": "https://wpscan.com/vulnerability/18ab1570-2b4a-48a4-86e6-c1d368563691"
                    }
                ]
            }
        },
        "impact": {},
        "lastModifiedDate": "2021-08-02T12:11Z",
        "publishedDate": "2021-08-02T11:15Z"
    }
}